{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-13T08:30:20.545Z",
    "end": "2024-08-13T08:30:22.080Z",
    "duration": 1535,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "586f8bf5-fb8d-48e3-bb2b-7f2b7d26e937",
      "title": "",
      "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
      "file": "/test/lib/states.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "753f8842-2c95-4225-8a63-4f841ebbb8d4",
          "title": "States",
          "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
          "file": "/test/lib/states.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0782d3f9-7b46-42f4-9c81-fea8de8838c9",
              "title": "constructor()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw an error with invalid url",
                  "fullTitle": "States constructor() should throw an error with invalid url",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(() => {\n    new GitLabStateHelper('ftp://foo.bar', '****');\n}, /Invalid url!/);",
                  "err": {},
                  "uuid": "b53d3950-873b-4d5c-a09f-c1b38ba35299",
                  "parentUUID": "0782d3f9-7b46-42f4-9c81-fea8de8838c9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error without token",
                  "fullTitle": "States constructor() should throw an error without token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(() => {\n    new GitLabStateHelper('http://localhost', '****');\n}, /Invalid token!/);",
                  "err": {},
                  "uuid": "008a8118-eeda-44f3-9f6f-92768fb69d09",
                  "parentUUID": "0782d3f9-7b46-42f4-9c81-fea8de8838c9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b53d3950-873b-4d5c-a09f-c1b38ba35299",
                "008a8118-eeda-44f3-9f6f-92768fb69d09"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bb0c4782-102e-4a5c-ac7f-da394aa55968",
              "title": "getState()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "States getState() should work",
                  "timedOut": false,
                  "duration": 1530,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const states = new GitLabStateHelper();\nconst result1 = await states.getState(projectId, 'develop');\nassert.strictEqual(typeof result1.status, 'string');\nassert.ok(typeof result1.coverage === 'string' || result1.coverage === undefined);\nconst result2 = await states.getState(projectId, 'develop');\nassert.strictEqual(result2.status, result1.status);\nassert.strictEqual(result2.coverage, result1.coverage);",
                  "err": {},
                  "uuid": "cca33b9b-ca20-4b41-a1aa-8562eb1de51d",
                  "parentUUID": "bb0c4782-102e-4a5c-ac7f-da394aa55968",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cca33b9b-ca20-4b41-a1aa-8562eb1de51d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1530,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}