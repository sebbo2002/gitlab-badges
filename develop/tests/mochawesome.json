{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-03T19:07:11.499Z",
    "end": "2024-08-03T19:07:12.562Z",
    "duration": 1063,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8bacca9c-8db6-457f-8446-002a876bfc4f",
      "title": "",
      "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
      "file": "/test/lib/states.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "04c2967f-e871-44d4-8dbd-6d977b756a09",
          "title": "States",
          "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
          "file": "/test/lib/states.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2de7f93c-9097-4f27-8a88-a6286676d48d",
              "title": "constructor()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw an error with invalid url",
                  "fullTitle": "States constructor() should throw an error with invalid url",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(() => {\n    new GitLabStateHelper('ftp://foo.bar', '****');\n}, /Invalid url!/);",
                  "err": {},
                  "uuid": "764806a1-4601-44d2-b790-8ba210412496",
                  "parentUUID": "2de7f93c-9097-4f27-8a88-a6286676d48d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error without token",
                  "fullTitle": "States constructor() should throw an error without token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(() => {\n    new GitLabStateHelper('http://localhost', '****');\n}, /Invalid token!/);",
                  "err": {},
                  "uuid": "d62b2a3f-b61a-478f-931f-4bddca9ac672",
                  "parentUUID": "2de7f93c-9097-4f27-8a88-a6286676d48d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "764806a1-4601-44d2-b790-8ba210412496",
                "d62b2a3f-b61a-478f-931f-4bddca9ac672"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2230e180-a290-4664-ae0a-b800c8d0f49d",
              "title": "getState()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "States getState() should work",
                  "timedOut": false,
                  "duration": 1058,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const states = new GitLabStateHelper();\nconst result1 = await states.getState(projectId, 'develop');\nassert.strictEqual(typeof result1.status, 'string');\nassert.ok(typeof result1.coverage === 'string' || result1.coverage === undefined);\nconst result2 = await states.getState(projectId, 'develop');\nassert.strictEqual(result2.status, result1.status);\nassert.strictEqual(result2.coverage, result1.coverage);",
                  "err": {},
                  "uuid": "d3c18820-7504-40c9-a467-f77c224484f3",
                  "parentUUID": "2230e180-a290-4664-ae0a-b800c8d0f49d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3c18820-7504-40c9-a467-f77c224484f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1058,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}