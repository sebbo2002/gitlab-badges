{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-04T19:01:36.223Z",
    "end": "2025-07-04T19:01:37.820Z",
    "duration": 1597,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "416dad43-6727-49a9-8e52-e786a4019994",
      "title": "",
      "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
      "file": "/test/lib/states.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6a014cb-8123-46d9-811b-c9fbd181c1e7",
          "title": "States",
          "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
          "file": "/test/lib/states.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e42dfdb6-681a-4658-a78d-d2c1ffcf52b7",
              "title": "constructor()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw an error with invalid url",
                  "fullTitle": "States constructor() should throw an error with invalid url",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "import_assert.default.throws(()=>{new import_states.default(\"ftp://foo.bar\",\"****\")},/Invalid url!/)",
                  "err": {},
                  "uuid": "2792d147-4ab6-4790-97a0-2e9475472743",
                  "parentUUID": "e42dfdb6-681a-4658-a78d-d2c1ffcf52b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error without token",
                  "fullTitle": "States constructor() should throw an error without token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "import_assert.default.throws(()=>{new import_states.default(\"http://localhost\",\"****\")},/Invalid token!/)",
                  "err": {},
                  "uuid": "c663fc2b-836d-47aa-9dce-7e15c7e78576",
                  "parentUUID": "e42dfdb6-681a-4658-a78d-d2c1ffcf52b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2792d147-4ab6-4790-97a0-2e9475472743",
                "c663fc2b-836d-47aa-9dce-7e15c7e78576"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "274f4b7e-4c5b-4283-808c-b20909656417",
              "title": "getState()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "States getState() should work",
                  "timedOut": false,
                  "duration": 1586,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const states=new import_states.default;const result1=await states.getState(projectId,\"develop\");import_assert.default.strictEqual(typeof result1.status,\"string\");import_assert.default.ok(typeof result1.coverage===\"string\"||result1.coverage===void 0);const result2=await states.getState(projectId,\"develop\");import_assert.default.strictEqual(result2.status,result1.status);import_assert.default.strictEqual(result2.coverage,result1.coverage)",
                  "err": {},
                  "uuid": "a26396ae-bcdd-45af-92ae-4fa05906343c",
                  "parentUUID": "274f4b7e-4c5b-4283-808c-b20909656417",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a26396ae-bcdd-45af-92ae-4fa05906343c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1586,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}